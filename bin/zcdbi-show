#!/usr/bin/perl

use ZConf::DBI;
use strict;
use warnings;
use Getopt::Std;

$Getopt::Std::STANDARD_HELP_VERSION = 1;

#version function
sub main::VERSION_MESSAGE {
        print "zcdbi-show 0.0.0\n";
}

#print help
sub main::HELP_MESSAGE {
        print "\n".
		      "-s <set>\n".
			  "-d <data source>\n";
}

#gets the options
my %opts=();
getopts('s:d:', \%opts);

#initilize it
my $zcdbi=ZConf::DBI->new;

#read the specified set if requested
if (defined($opts{s})) {
	$zcdbi->readset($opts{s});
	if ($zcdbi->error) {
		warm('zcdbi-show:'.$zcdbi->error.': '.$zcdbi->errorString);
		exit $zcdbi->error;
	}
}

#fetches the DS
my $ds=$zcdbi->getDS($opts{d});
if ($zcdbi->error) {
	warn('zcdbi-show:'.$zcdbi->error.': '.$zcdbi->errorString);
	exit $zcdbi->error;
}
#fetches the DS user
my $user=$zcdbi->getDSuser($opts{d});
if ($zcdbi->error) {
	warn('zcdbi-show:'.$zcdbi->error.': '.$zcdbi->errorString);
	exit $zcdbi->error;
}
#fetches the DS pass
my $pass=$zcdbi->getDSpass($opts{d});
if ($zcdbi->error) {
	warn('zcdbi-show:'.$zcdbi->error.': '.$zcdbi->errorString);
	exit $zcdbi->error;
}
#fetches the DS attributes
my %attrs=$zcdbi->getDSattrs($opts{d});
if ($zcdbi->error) {
	warn('zcdbi-show:'.$zcdbi->error.': '.$zcdbi->errorString);
	exit $zcdbi->error;
}

#print the data, minus the attributes
print 'name: '.$opts{d}."\n".
      'ds: '.$ds."\n".
      'user: '.$user."\n".
      'pass: '.$pass."\n";

#show the attributes
my $int=0;
my @keys=keys(%attrs);
while (defined( $keys[$int] )) {
	print 'attr/'.$keys[$int].': '.$attrs{$keys[$int]}."\n";

	$int++;
}

exit 0;

=head1 NAME

zcdbi-show - Show information for a configured data source.

=head1 SYNOPSIS

zcdbi-show [B<-s> <set>] B<-d> <data source name>

=head1 SWTICHES

=head2 -d <data source name>

The name of the data source to show.

=head2 -s <set>

The set to load.

=head1 EXIT CODES

Any non-zero exit codes are the error codes returned by ZConf.

=head1 AUTHOR

Copyright (c) 2010, Zame C. Bowers <vvelox@vvelox.net>

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS` OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

=head1 Changelog

=head2 2010-03-12/15:00

Initial release.

=cut
